{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","data.js","App.js","index.js"],"names":["ExpenseForm","onSaveExpensData","stopEditingHandler","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","className","type","value","onChange","e","target","min","step","max","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enterdExpensData","expensData","id","Math","random","toString","Card","props","classes","children","ExpensesFilter","onChangeFilter","selected","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","el","i","ChartBar","maxValue","label","barFillHeight","round","style","height","Chart","dataPoints","totalMaximum","dataPoint","reduce","pre","cur","console","log","ExpensesChart","expenses","chartDataPoints","expense","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a710a6e4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = ({ onSaveExpensData, stopEditingHandler }) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //طريقة اذا حبيت انشاء ستايت وحدة\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (e) => {\n    //بهي الطريقة لازم تتاكد تحط باقي المعاومات منشان ما تضيع الاوبجيكت\n    setEnteredTitle(e.target.value);\n    //\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: e.target.value,\n    // });\n    //\n    //\n    //'prevState' i can change the name\n    //بستخدم الطريقة يلي تحت منشان اضمن انه في حال عدلت على غير ستيت ما يرجع الباقي للقيمة الاولى\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: e.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: e.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (e) => {\n    setEnteredDate(e.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: e.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    onSaveExpensData(expenseData);\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={stopEditingHandler} type=\"button\">\n          Cansel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = ({ onAddExpense }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const onSaveExpensDataHandler = (enterdExpensData) => {\n    const expensData = {\n      ...enterdExpensData,\n      id: Math.random().toString(),\n    };\n\n    onAddExpense(expensData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpensData={onSaveExpensDataHandler} stopEditingHandler={stopEditingHandler} />}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = ({ onChangeFilter, selected }) => {\r\n  const dropDownChangeHandler = (e) => {\r\n    onChangeFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={selected} onChange={dropDownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((el, i) => {\r\n        return (\r\n          <ExpenseItem\r\n            //\r\n            key={i}\r\n            title={el.title}\r\n            amount={el.amount}\r\n            date={el.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import \"./ChartBar.css\";\r\nimport React from \"react\";\r\n\r\nconst ChartBar = ({ value, maxValue, label }) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (maxValue > 0) {\r\n    barFillHeight = Math.round((value / maxValue) * 100) + \"%\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className=\"chart-bar__fill\" style={{ height: barFillHeight }}></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nconst Chart = ({ dataPoints }) => {\r\n  const dataPointValues = dataPoints.map((dataPoint) => {\r\n    return dataPoint.value;\r\n  });\r\n  const totalMaximum = dataPointValues.reduce((pre, cur) => {\r\n    return pre + cur;\r\n  });\r\n  console.log(totalMaximum);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {dataPoints.map((dataPoint) => {\r\n        return (\r\n          <ChartBar\r\n            //\r\n            key={dataPoint.label}\r\n            value={dataPoint.value}\r\n            maxValue={totalMaximum}\r\n            label={dataPoint.label}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./../Chart/Chart\";\r\n\r\nconst ExpensesChart = ({ expenses }) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((el) => {\n    return el.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <li>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </li>\n  );\n};\n\nexport default Expenses;\n","export const DUMMY_EXPENSES = [\r\n  {\r\n    id: \"e1\",\r\n    title: \"Toilet Paper\",\r\n    amount: 94.12,\r\n    date: new Date(2020, 7, 14),\r\n  },\r\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\r\n  {\r\n    id: \"e3\",\r\n    title: \"Car Insurance\",\r\n    amount: 294.67,\r\n    date: new Date(2021, 2, 28),\r\n  },\r\n  {\r\n    id: \"e4\",\r\n    title: \"New Desk (Wooden)\",\r\n    amount: 450,\r\n    date: new Date(2021, 5, 12),\r\n  },\r\n];\r\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport { DUMMY_EXPENSES } from \"./data\";\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}