{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","onSaveExpensData","stopEditingHandler","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","className","type","value","onChange","e","target","min","step","max","onClick","NewExpense","onAddExpense","isEditing","setIsEditing","enterdExpensData","expensData","id","Math","random","toString","ExpenseDate","props","month","toLocaleString","day","year","getFullYear","Card","classes","children","ExpenseItem","ExpensesFilter","onChangeFilter","selected","ExpensesList","items","length","map","el","i","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","expenses","setExpenses","expense","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a4b33c71.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = ({ onSaveExpensData, stopEditingHandler }) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  //طريقة اذا حبيت انشاء ستايت وحدة\n  // const [userInput, setUserInput] = useState({\n  //   enteredTitle: \"\",\n  //   enteredAmount: \"\",\n  //   enteredDate: \"\",\n  // });\n\n  const titleChangeHandler = (e) => {\n    //بهي الطريقة لازم تتاكد تحط باقي المعاومات منشان ما تضيع الاوبجيكت\n    setEnteredTitle(e.target.value);\n    //\n    // setUserInput({\n    //   ...userInput,\n    //   enteredTitle: e.target.value,\n    // });\n    //\n    //\n    //'prevState' i can change the name\n    //بستخدم الطريقة يلي تحت منشان اضمن انه في حال عدلت على غير ستيت ما يرجع الباقي للقيمة الاولى\n    // setUserInput((prevState) => {\n    //   return { ...prevState, enteredTitle: e.target.value };\n    // });\n  };\n\n  const amountChangeHandler = (e) => {\n    setEnteredAmount(e.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredAmount: e.target.value,\n    // });\n  };\n\n  const dateChangeHandler = (e) => {\n    setEnteredDate(e.target.value);\n    // setUserInput({\n    //   ...userInput,\n    //   enteredDate: e.target.value,\n    // });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n\n    onSaveExpensData(expenseData);\n\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input type=\"date\" min=\"2019-01-01\" max=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler} />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={stopEditingHandler} type=\"button\">\n          Cansel\n        </button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import React, { useState } from \"react\";\n\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = ({ onAddExpense }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const onSaveExpensDataHandler = (enterdExpensData) => {\n    const expensData = {\n      ...enterdExpensData,\n      id: Math.random().toString(),\n    };\n\n    onAddExpense(expensData);\n    setIsEditing(false);\n  };\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpensData={onSaveExpensDataHandler} stopEditingHandler={stopEditingHandler} />}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React from 'react';\n\nimport './ExpenseDate.css';\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString('en-US', { month: 'long' });\n  const day = props.date.toLocaleString('en-US', { day: '2-digit' });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className='expense-date'>\n      <div className='expense-date__month'>{month}</div>\n      <div className='expense-date__year'>{year}</div>\n      <div className='expense-date__day'>{day}</div>\n    </div>\n  );\n};\n\nexport default ExpenseDate;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"../UI/Card\";\nimport \"./ExpenseItem.css\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n};\n\nexport default ExpenseItem;\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = ({ onChangeFilter, selected }) => {\r\n  const dropDownChangeHandler = (e) => {\r\n    onChangeFilter(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={selected} onChange={dropDownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((el, i) => {\r\n        return (\r\n          <ExpenseItem\r\n            //\r\n            key={i}\r\n            title={el.title}\r\n            amount={el.amount}\r\n            date={el.date}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filterChangeHandler = (selectedYear) => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter((el) => {\n    return el.date.getFullYear().toString() === filteredYear;\n  });\n\n  return (\n    <li>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </li>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport Expenses from \"./components/Expenses/Expenses\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  // return React.createElement(\n  //   'div',\n  //   {},\n  //   React.createElement('h2', {}, \"Let's get started!\"),\n  //   React.createElement(Expenses, { items: expenses })\n  // );\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}